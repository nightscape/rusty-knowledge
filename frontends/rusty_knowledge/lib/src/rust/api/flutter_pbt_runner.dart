// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'flutter_pbt_backend.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions have error during generation (see debug logs or enable `stop_on_error: true` for more details): `run_proptest_cases`

/// Run a single proptest case with N random transitions
///
/// This manually implements what `prop_state_machine!` does:
/// 1. Generate random transitions using `ReferenceStateMachine::transitions()`
/// 2. Check preconditions
/// 3. Apply to both reference and SUT
/// 4. Check invariants after each step
Future<String> runSingleProptestCase({
  required int caseNum,
  required BigInt numSteps,
  required BigInt seed,
  required FlutterPbtBackend flutterBackend,
}) => RustLib.instance.api.crateApiFlutterPbtRunnerRunSingleProptestCase(
  caseNum: caseNum,
  numSteps: numSteps,
  seed: seed,
  flutterBackend: flutterBackend,
);
